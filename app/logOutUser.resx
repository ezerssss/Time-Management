<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userNameInitial.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="goBack.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAAmtJREFUSEutlr1uE0EUhV3SxYXrIFGkSodoeAEqaCioeQYaKloa+rxBCp4gBVJo
        aJHoqGgQKJKF5ArLtrLL+WZnzN27d9eTyEc6lj3359uZnZ31rK1Q0zTtbrdbbjabj+v1+uVqtVrIs+wF
        Y8TIIbdGk2A1adTwWo3PDGjS5FJDbW4TahSsq/+tJo+j5jWmlh653UADMBfKskXNMIq+j5le0eR74Az9
        EDXw9opyiunp4T3w1EwVfiQ/Kb+9bG5keidI1h7M/YgKipXyQ+ay3/Pby+dHFuMnLJTAWoZmaiMp5Q15
        EuCnmbVXVBNZjHNYNEpgLcN1lIgVPpG35ElXjHn5minDotGMC+DZi5Kwcj6TKK3lB4x5+Zopw4LJui+j
        BCzQs4Ts9JoxL19TYzFv0m6LgliwPx2z/V7GvGx+rWEydc7eQVCwi47Z3soPy7iXrak1TL7YAz9ZoNOE
        7PRL5j7fy7539iIaBPxJPoqi/jgcVP5ZV5a0lMsMvpjvVY76Yz4GS41V9FYuemVjXjZW6Tk3+nkQSBbw
        a8dNz/CJjXnZ2CHDZGtfRkEMTP4LWfpmY142dsgweZgHLwfbSMAXHTfpXYlbldxawyxH5mmUUCxgeaXx
        TJ8z5uVrxgwrHZl009TT4T9lpd2QK937tYhh0SSBb6WKWfNHoLcRvWwsMgxYMBMYbbfb/Xlca68oxxpG
        xv0HIy3DRVRwDNM7Y5J6YG66Eqr+7N3F9KS3VQ+MMvxoM6eXh6IBuIj7cWjDTZlae0+9RsGIHagrvrrL
        BZBLTdm9Y5oEF7FUnDZqeKnGPFJzA5szRoycaFmHatt/4otz/5CK+BMAAAAASUVORK5CYII=
</value>
  </data>
</root>